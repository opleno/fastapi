name: Build and Deploy Code

on:
  [push, pull_request]
  # push:
  #   branches: # ["main", "another_branch", "feature_branch"]
  #     - "main"
  #     - "another_branch"
  # pull_request:
  #   branches:
  #     - "test_branch"

jobs:
  build:
    environment:
      name: fastapi-course-TESTING
    env:
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_HOST_URI: ${{secrets.DB_HOST_URI}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      OAUTH2_SECRET_KEY: ${{secrets.OAUTH2_SECRET_KEY}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: Install python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-course:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: fastapi-course-PROD
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      # - name: deploy to ubuntu server in digitalocean
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{secrets.PROD_HOST}}
      #     username: ${{secrets.PROD_USERNAME}}
      #     password: ${{secrets.PROD_PASSWORD}}
      #     script: |
      #       cd app/src
      #       git pull
      #       echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart fastapi